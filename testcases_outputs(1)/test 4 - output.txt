1	OPERATOR	/
1	OPERATOR	/
1	IDENTIFIER	test
1	KEYWORD		case
1	OPERATOR	-
1	INTEGER		4

2	OPERATOR	/
2	OPERATOR	/
2	IDENTIFIER	hola
2	STRING		"string"
2	IDENTIFIER	close
2	DELIMITER	;
2	IDENTIFIER	by
2	OPERATOR	|
2	ERROR		'char'
2	ERROR		''
2	ERROR		'

3	OPERATOR	/
3	OPERATOR	/
3	STRING		"weird char:"
3	OPERATOR	+
3	STRING		"-"
3	OPERATOR	+
3	KEYWORD		char
3	KEYWORD		string
3	KEYWORD		boolean

5	KEYWORD		void
5	IDENTIFIER	sort101
5	DELIMITER	(
5	KEYWORD		int
5	DELIMITER	[
5	DELIMITER	]
5	IDENTIFIER	arr
5	DELIMITER	)
5	DELIMITER	{

6	IDENTIFIER	for
6	DELIMITER	(
6	KEYWORD		int
6	IDENTIFIER	i
6	OPERATOR	=
6	HEXADECIMAL	0x00000F
6	DELIMITER	;
6	IDENTIFIER	i
6	OPERATOR	<
6	IDENTIFIER	arrlength
6	DELIMITER	;
6	IDENTIFIER	i
6	OPERATOR	+
6	OPERATOR	+
6	DELIMITER	)
6	DELIMITER	{

7	IDENTIFIER	for
7	DELIMITER	(
7	KEYWORD		int
7	IDENTIFIER	j
7	OPERATOR	=
7	ERROR		1b
7	DELIMITER	;
7	IDENTIFIER	j
7	OPERATOR	<
7	IDENTIFIER	arrlength
7	DELIMITER	;
7	IDENTIFIER	j
7	OPERATOR	+
7	OPERATOR	+
7	DELIMITER	)
7	DELIMITER	{

8	KEYWORD		if
8	DELIMITER	(
8	IDENTIFIER	arr
8	DELIMITER	[
8	IDENTIFIER	j
8	DELIMITER	]
8	OPERATOR	<
8	IDENTIFIER	arr
8	DELIMITER	[
8	IDENTIFIER	j
8	OPERATOR	-
8	INTEGER		1
8	DELIMITER	]
8	DELIMITER	)
8	DELIMITER	{

9	KEYWORD		int
9	IDENTIFIER	temp
9	OPERATOR	=
9	IDENTIFIER	arr
9	DELIMITER	[
9	IDENTIFIER	j
9	DELIMITER	]
9	DELIMITER	;

10	IDENTIFIER	arr
10	DELIMITER	[
10	IDENTIFIER	j
10	DELIMITER	]
10	OPERATOR	=
10	IDENTIFIER	arr
10	DELIMITER	[
10	IDENTIFIER	j
10	OPERATOR	-
10	INTEGER		1
10	DELIMITER	]
10	DELIMITER	;

11	IDENTIFIER	arr
11	DELIMITER	[
11	IDENTIFIER	j
11	OPERATOR	/
11	FLOAT		1.
11	DELIMITER	]
11	OPERATOR	=
11	IDENTIFIER	temp
11	DELIMITER	;

12	IDENTIFIER	for
12	DELIMITER	(
12	DELIMITER	;
12	DELIMITER	;
12	DELIMITER	)
12	DELIMITER	;


13	DELIMITER	}
13	KEYWORD		else
13	DELIMITER	{
13	DELIMITER	}

14	DELIMITER	}

15	DELIMITER	}

16	IDENTIFIER	for
16	DELIMITER	(
16	KEYWORD		int
16	ERROR		@i
16	OPERATOR	=
16	INTEGER		0
16	DELIMITER	;
16	IDENTIFIER	i
16	OPERATOR	<
16	FLOAT		1e-1
16	OPERATOR	-
16	OCTAL		01
16	DELIMITER	;
16	IDENTIFIER	i
16	OPERATOR	+
16	OPERATOR	+
16	DELIMITER	)
16	DELIMITER	{

17	IDENTIFIER	Systemoutprint
17	DELIMITER	(
17	IDENTIFIER	arr
17	DELIMITER	[
17	IDENTIFIER	i2e
17	OPERATOR	-
17	ERROR	0x29FG
17	DELIMITER	]
17	OPERATOR	+
17	STRING		" "
17	OPERATOR	+
17	CHARACTER	'\''
17	OPERATOR	+
17	STRING		"\""
17	DELIMITER	)
17	DELIMITER	;

18	DELIMITER	}

19	DELIMITER	}

21	KEYWORD		int
21	IDENTIFIER	main
21	DELIMITER	(
21	DELIMITER	)
21	DELIMITER	{

22	IDENTIFIER	Scanner
22	IDENTIFIER	input
22	OPERATOR	=
22	IDENTIFIER	new
22	IDENTIFIER	Scanner
22	DELIMITER	(
22	IDENTIFIER	System
22	DELIMITER	)
22	DELIMITER	;

23	KEYWORD		print
23	DELIMITER	(
23	ERROR		"Enter the size of the array: );

24	KEYWORD		float
24	IDENTIFIER	n
24	OPERATOR	=
24	IDENTIFIER	inputnextInt
24	DELIMITER	(
24	DELIMITER	)
24	DELIMITER	;

25	KEYWORD		char
25	DELIMITER	[
25	DELIMITER	]
25	IDENTIFIER	x
25	OPERATOR	=
25	IDENTIFIER	new
25	KEYWORD		boolean
25	DELIMITER	[
25	IDENTIFIER	n
25	DELIMITER	]
25	DELIMITER	;

26	IDENTIFIER	Systemoutprint1n
26	DELIMITER	(
26	STRING		"Enter "
26	OPERATOR	+
26	KEYWORD		true
26	OPERATOR	+
26	STRING		" numbers:\n\t ”
26	OPERATOR	+
26	CHARACTER	'x'
26	DELIMITER	)
26	DELIMITER	;

27	KEYWORD		switch
27	DELIMITER	(
27	KEYWORD		int
27	IDENTIFIER	i
27	OPERATOR	=
27	ERROR		0.0.1
27	DELIMITER	;
27	IDENTIFIER	i
27	OPERATOR	<
27	IDENTIFIER	n
27	DELIMITER	;
27	OPERATOR	+
27	OPERATOR	+
27	IDENTIFIER	i
27	DELIMITER	)
27	DELIMITER	{

28	KEYWORD		case
28 	DELIMITER	:
28 	IDENTIFIER	x
28 	DELIMITER	[
28 	IDENTIFIER	i
28 	DELIMITER	]
28 	OPERATOR	=
28 	IDENTIFIER	input_next_int
28 	DELIMITER	(
28 	DELIMITER	)
28 	DELIMITER	;

29 	DELIMITER	}

30	KEYWORD		if 
30	DELIMITER	(
30	KEYWORD		true
30	OPERATOR	!=
30	KEYWORD		false 
30	OPERATOR	& 
30	KEYWORD		false
30	OPERATOR	==
30	OPERATOR	==
30	OPERATOR	=
30	KEYWORD		true
30	DELIMITER	) 
30	IDENTIFIER	$
30	OPERATOR	=
30	INTEGER		0
30	DELIMITER	;

31	KEYWORD		print
31	OPERATOR	&
31	ERROR		print.print
31	DELIMITER	(
31	ERROR		'The Sorted numbers: '
31	DELIMITER	)
31	DELIMITER	;

32	KEYWORD		return
32	BINARY		0b000111
32	DELIMITER	;

33	KEYWORD		return
33	OCTAL		00000005
33	OPERATOR	*
33	ERROR		00000005.1
33	DELIMITER	;

34	KEYWORD		return 
34	ERROR		0x000002.1 
34	OPERATOR	/ 
34	ERROR		0123456789
34	DELIMITER	;

35	KEYWORD		float 
35 	IDENTIFIER	________________ 
35 	OPERATOR	= 
35 	FLOAT		5.
35	DELIMITER	;
35	FLOAT		1900e+1900

36 	KEYWORD		string 
36	IDENTIFIER	x 
36	OPERATOR	= 
36	CHARACTER	’\’’
36	IDENTIFIER	b
36	ERROR		’ + '
36	ERROR		\
36	CHARACTER	‘b’ 
36	OPERATOR	* 
36 	IDENTIFIER	$50
36 	DELIMITER	;
36	ERROR		1900e+1900.1900

37 	KEYWORD		print 
37	DELIMITER	(
37 	STRING		“\\\\\\\\\\a”
37	DELIMITER	)
37 	DELIMITER	;

38	KEYWORD		print 
38	DELIMITER	(
38	CHARACTER	’\a’
38	OPERATOR	/
38	ERROR		“\\\”); 

39	IDENTIFIER	a 
39 	OPERATOR	= 
39	IDENTIFIER	b 
39	OPERATOR	+ 
39	FLOAT		1e1 
39 	OPERATOR	- 
39	BINARY		0b0 
39 	OPERATOR	* 
39 	IDENTIFIER	e 
39	OPERATOR	/ 
39	FLOAT		1.2e-3
39 	OPERATOR	+
39 	OPERATOR	+
39	DELIMITER	;

40	IDENTIFIER	error 
40	OPERATOR	= 
40	ERROR		\
40	ERROR		’;
  
41	IDENTIFIER	error 
41	OPERATOR	= 
41	ERROR		a.b
41	DELIMITER	;

42	DELIMITER	}





